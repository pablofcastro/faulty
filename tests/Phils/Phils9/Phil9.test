Global fork0 : BOOL;
Global fork1 : BOOL;
Global fork2 : BOOL;
Global fork3 : BOOL;
Global fork4 : BOOL;
Global fork5 : BOOL;
Global fork6 : BOOL;
Global fork7 : BOOL;
Global fork8 : BOOL;

// FIRST RIGHT
Process Phil0{
   thinking, hungry, eating, hasL, hasR: BOOL;
   Initial: thinking && !eating && !hungry && !hasL && !hasR && fork0 && fork1;
   Normative: true; 

   thinking -> hungry = true, thinking = false;
   thinking -> hungry = false, thinking = true;
   hungry && fork1 && !hasR  -> fork1 = false, hasR = true;
   hungry && hasR && fork0 -> fork0 = false, hasL = true;
   hungry && hasL && hasR -> eating = true, hungry = false;
   eating -> fork0 = !fork0, fork1 = !fork1, eating = false, thinking = true;        
}

// FIRST LEFT
Process Phil1{
   thinking, hungry, eating, hasL, hasR: BOOL;
   Initial: thinking && !eating && !hungry && !hasL && !hasR && fork1 && fork2;
   Normative: true; 
   
   thinking -> hungry = true, thinking = false;
   thinking -> hungry = false, thinking = true;
   hungry && fork1 && !hasL  -> fork1 = false, hasL = true;
   hungry && hasL && fork2 -> fork2 = false, hasR = true;
   hungry && hasL && hasR -> eating = true, hungry = false;
   eating -> fork0 = !fork0, fork1 = !fork1, eating = false, thinking = true;
    
}

// FIRST RIGHT
Process Phil2{
   thinking, hungry, eating, hasL, hasR: BOOL;
   Initial: thinking && !eating && !hungry && !hasL && !hasR && fork2 && fork3;
   Normative: true; 
   
   thinking -> hungry = true, thinking = false;
   thinking -> hungry = false, thinking = true;
   hungry && fork3 && !hasR  -> fork3 = false, hasR = true;
   hungry && hasR && fork2 -> fork2 = false, hasL = true;
   hungry && hasL && hasR -> eating = true, hungry = false;
   eating -> fork2 = !fork2, fork3 = !fork3, eating = false, thinking = true;
    
}

// FIRST LEFT
Process Phil3{
   thinking, hungry, eating, hasL, hasR: BOOL;
   Initial: thinking && !eating && !hungry && !hasL && !hasR && fork3 && fork4;
   Normative: true; 
   
   thinking -> hungry = true, thinking = false;
   thinking -> hungry = false, thinking = true;
   hungry && fork3 && !hasL  -> fork3 = false, hasL = true;
   hungry && hasL && fork4 -> fork4 = false, hasR = true;
   hungry && hasL && hasR -> eating = true, hungry = false;
   eating -> fork4 = !fork4, fork3 = !fork3, eating = false, thinking = true;
    
}

// FIRST RIGHT
Process Phil4{
   thinking, hungry, eating, hasL, hasR: BOOL;
   Initial: thinking && !eating && !hungry && !hasL && !hasR && fork4 && fork5;
   Normative: true; 
   
   thinking -> hungry = true, thinking = false;
   thinking -> hungry = false, thinking = true;
   hungry && fork5 && !hasR  -> fork5 = false, hasR = true;
   hungry && hasR && fork4 -> fork4 = false, hasL = true;
   hungry && hasL && hasR -> eating = true, hungry = false;
   eating -> fork5 = !fork5, fork4 = !fork4, eating = false, thinking = true;
    
}

// FIRST LEFT
Process Phil5{
   thinking, hungry, eating, hasL, hasR: BOOL;
   Initial: thinking && !eating && !hungry && !hasL && !hasR && fork5 && fork6;
   Normative: true; 
   
   thinking -> hungry = true, thinking = false;
   thinking -> hungry = false, thinking = true;
   hungry && fork5 && !hasL  -> fork5 = false, hasL = true;
   hungry && hasL && fork6 -> fork6 = false, hasR = true;
   hungry && hasL && hasR -> eating = true, hungry = false;
   eating -> fork6 = !fork6, fork5 = !fork5, eating = false, thinking = true;
    
}

// FIRST RIGHT
Process Phil6{
   thinking, hungry, eating, hasL, hasR: BOOL;
   Initial: thinking && !eating && !hungry && !hasL && !hasR && fork6 && fork7;
   Normative: true; 
   
   thinking -> hungry = true, thinking = false;
   thinking -> hungry = false, thinking = true;
   hungry && fork6 && !hasR  -> fork6 = false, hasR = true;
   hungry && hasR && fork7 -> fork7 = false, hasL = true;
   hungry && hasL && hasR -> eating = true, hungry = false;
   eating -> fork7 = !fork7, fork6 = !fork6, eating = false, thinking = true;
    
}

// FIRST LEFT
Process Phil7{
   thinking, hungry, eating, hasL, hasR: BOOL;
   Initial: thinking && !eating && !hungry && !hasL && !hasR && fork7 && fork8;
   Normative: true; 
   
   thinking -> hungry = true, thinking = false;
   thinking -> hungry = false, thinking = true;
   hungry && fork7 && !hasL  -> fork7 = false, hasL = true;
   hungry && hasL && fork8 -> fork8 = false, hasR = true;
   hungry && hasL && hasR -> eating = true, hungry = false;
   eating -> fork7 = !fork7, fork8 = !fork8, eating = false, thinking = true;
    
}

// FIRST RIGHT
Process Phil8{
   thinking, hungry, eating, hasL, hasR: BOOL;
   Initial: thinking && !eating && !hungry && !hasL && !hasR && fork8 && fork0;
   Normative: true; 
   
   thinking -> hungry = true, thinking = false;
   thinking -> hungry = false, thinking = true;
   hungry && fork0 && !hasR  -> fork0 = false, hasR = true;
   hungry && hasR && fork8 -> fork8 = false, hasL = true;
   hungry && hasL && hasR -> eating = true, hungry = false;
   eating -> fork8 = !fork8, fork0 = !fork0, eating = false, thinking = true;
    
}





Main(){
 phil0:Phil0;
 phil1:Phil1;
 phil2:Phil2;
 phil3:Phil3;
 phil4:Phil4;
 phil5:Phil5;
 phil6:Phil6;
 phil7:Phil7;
 phil8:Phil8;

 run phil0();
 run phil1();
 run phil2();
 run phil3();
 run phil4();
 run phil5();
 run phil6();
 run phil7();
 run phil8(); 

}
