Global fork0 : BOOL;
Global fork1 : BOOL;
Global fork2 : BOOL;
Global fork3 : BOOL;


// FIRST LEFT
Process Phil1{
   s0, s1, hasl, hasr: BOOL;
   Initial: !s0 && !s1  && !hasl && !hasr && fork0 && fork1;
   Normative: !(s0 && s1); 

   !s0 && !s1 -> s0=false, s1=true; 
   !s0 && !s1 -> s0=false, s1=false; 
   !s0 && s1 && fork0 && !hasl && !hasr  -> fork0=false, hasl=true; 
   !s0 && s1 && !fork0 && !hasl && !hasr -> s0=s0, s1=s1;
   !s0 && s1 && hasl && fork1 && !hasr -> fork1=false, hasr=true; 
   !s0 && s1 && hasl && !fork1 && !hasr -> fork0=true, hasl=false; 
   !s0 && s1 && hasl && hasr -> s0=true, s1=false; 
   s0 && !s1 -> s0=false, s1=false, fork0=true, fork1=true, hasl=false, hasr=false;
   true -> s0=true, s1=true;   
   
}

//FIRST RIGHT
Process Phil2{
   s0, s1, hasl, hasr: BOOL;
   Initial: !s0 && !s1  && !hasl && !hasr && fork1 && fork2;
   Normative: !(s0 && s1); 

   !s0 && !s1 -> s0=false, s1=true; 
   !s0 && !s1 -> s0=false, s1=false; 
   !s0 && s1 && fork2 && !hasr  -> fork2=false, hasr=true; 
   !s0 && s1 && !fork2 && !hasr -> s0=s0, s1=s1;
   !s0 && s1 && hasr && fork1 -> fork1=false, hasl=true; 
   !s0 && s1 && hasr && !fork1 -> fork2=true, hasr=false; 
   !s0 && s1 && hasl && hasr -> s0=true, s1=false; 
   s0 && !s1 -> s0=false, s1=false, fork1=true, fork2=true, hasl=false, hasr=false;
   true -> s0=true, s1=true;  
}

// FIRST LEFT
Process Phil3{
   s0, s1, hasl, hasr: BOOL;
   Initial: !s0 && !s1  && !hasl && !hasr && fork2 && fork3;
   Normative: !(s0 && s1); 

   !s0 && !s1 -> s0=false, s1=true; 
   !s0 && !s1 -> s0=false, s1=false; 
   !s0 && s1 && fork2 && !hasl  -> fork2=false, hasl=true; 
   !s0 && s1 && !fork2 && !hasl  -> s0=s0, s1=s1; 
   !s0 && s1 && hasl && fork3-> fork3=false, hasr=true;  
   !s0 && s1 && hasl && !fork3-> fork2=true, hasl=false;  
   !s0 && s1 && hasl && hasr -> s0=true, s1=false; 
   s0 && !s1 -> s0=false, s1=false, fork3=true, fork2=true, hasl=false, hasr=false;
   true -> s0=true, s1=true;
}



//FIRST RIGHT
Process Phil4{
   s0, s1, hasl, hasr: BOOL;
   Initial: !s0 && !s1  && !hasl && !hasr && fork3 && fork0;
   Normative: !(s0 && s1); 

   !s0 && !s1 -> s0=false, s1=true; 
   !s0 && !s1 -> s0=false, s1=false; 
   !s0 && s1 && fork0 && !hasr  -> fork0=false, hasr=true; 
   !s0 && s1 && !fork0 && !hasr  -> s0=s0, s1=s1; 
   !s0 && s1 && hasr && fork3 -> fork3=false, hasl=true;  
   !s0 && s1 && hasr && !fork3 -> fork0=true, hasr=false;
   !s0 && s1 && hasl && hasr -> s0=true, s1=false; 
   s0 && !s1 -> s0=false, s1=false, fork0=true, fork3=true, hasr=false, hasl=false;
   true -> s0=true, s1=true;  
}



Main(){
 phil1:Phil1;
 phil2:Phil2;
 phil3:Phil3;
 phil4:Phil4;

 run phil1();
 run phil2();
 run phil3();
 run phil4();
 

}
