Global fork0 : BOOL;
Global fork1 : BOOL;
Global fork2 : BOOL;
Global fork3 : BOOL;
Global fork4 : BOOL;
Global fork5 : BOOL;
Global fork6 : BOOL;


// FIRST LEFT
Process Phil0{
    s0, s1, hasL, hasR: BOOL;
    Initial: !s0 && !s1  && !hasL && !hasR && fork0 && fork1;
    Normative: !(s0 && s1); 

   !s0 && !s1 -> s0=false, s1=true; 
   !s0 && !s1 -> s0=false, s1=false; 
   !s0 && s1 && fork0 && !hasL  -> fork0=false, hasL=true; 
   !s0 && s1 && hasL && fork1 -> fork1=false, hasR=true;  
   !s0 && s1 && hasL && hasR -> s0=true, s1=false; 
   s0 && !s1 -> s0=false, s1=false, fork0=true, fork1=true;
   true -> s0=true, s1=true;   

}

// FIRST RIGHT
Process Phil1{   
    s0, s1, hasL, hasR: BOOL;
    Initial: !s0 && !s1  && !hasL && !hasR && fork1 && fork2;
    Normative: !(s0 && s1); 

   !s0 && !s1 -> s0=false, s1=true; 
   !s0 && !s1 -> s0=false, s1=false; 
   !s0 && s1 && fork2 && !hasR  -> fork0=false, hasR=true; 
   !s0 && s1 && hasR && fork1 -> fork1=false, hasL=true;  
   !s0 && s1 && hasL && hasR -> s0=true, s1=false; 
   s0 && !s1 -> s0=false, s1=false, fork1=true, fork2=true;
   true -> s0=true, s1=true;   
}

// FIRST LEFT
Process Phil2{  
    s0, s1, hasL, hasR: BOOL;
    Initial: !s0 && !s1  && !hasL && !hasR && fork2 && fork3;
    Normative: !(s0 && s1); 

   !s0 && !s1 -> s0=false, s1=true; 
   !s0 && !s1 -> s0=false, s1=false; 
   !s0 && s1 && fork2 && !hasL  -> fork0=false, hasL=true; 
   !s0 && s1 && hasL && fork3 -> fork3=false, hasR=true;  
   !s0 && s1 && hasL && hasR -> s0=true, s1=false; 
   s0 && !s1 -> s0=false, s1=false, fork2=true, fork3=true;
   true -> s0=true, s1=true;   
    
}

// FIRST RIGHT
Process Phil3{
  
    s0, s1, hasL, hasR: BOOL;
    Initial: !s0 && !s1  && !hasL && !hasR && fork3 && fork4;
    Normative: !(s0 && s1); 

   !s0 && !s1 -> s0=false, s1=true; 
   !s0 && !s1 -> s0=false, s1=false; 
   !s0 && s1 && fork4 && !hasR  -> fork4=false, hasR=true; 
   !s0 && s1 && hasL && fork3 -> fork3=false, hasR=true;  
   !s0 && s1 && hasL && hasR -> s0=true, s1=false; 
   s0 && !s1 -> s0=false, s1=false, fork3=true, fork4=true;
   true -> s0=true, s1=true;   
}

// FIRST LEFT
Process Phil4{ 
    s0, s1, hasL, hasR: BOOL;
    Initial: !s0 && !s1  && !hasL && !hasR && fork4 && fork5;
    Normative: !(s0 && s1); 

   !s0 && !s1 -> s0=false, s1=true; 
   !s0 && !s1 -> s0=false, s1=false; 
   !s0 && s1 && fork4 && !hasL  -> fork4=false, hasL=true; 
   !s0 && s1 && hasL && fork5 -> fork5=false, hasR=true;  
   !s0 && s1 && hasL && hasR -> s0=true, s1=false; 
   s0 && !s1 -> s0=false, s1=false, fork5=true, fork4=true;
   true -> s0=true, s1=true;      
}

// FIRST RIGHT
Process Phil5{
  
    s0, s1, hasL, hasR: BOOL;
    Initial: !s0 && !s1  && !hasL && !hasR && fork5 && fork6;
    Normative: !(s0 && s1); 

   !s0 && !s1 -> s0=false, s1=true; 
   !s0 && !s1 -> s0=false, s1=false; 
   !s0 && s1 && fork6 && !hasR  -> fork6=false, hasR=true; 
   !s0 && s1 && hasL && fork5 -> fork5=false, hasL=true;  
   !s0 && s1 && hasL && hasR -> s0=true, s1=false; 
   s0 && !s1 -> s0=false, s1=false, fork5=true, fork6=true;
   true -> s0=true, s1=true;   
}

// FIRST LEFT
Process Phil6{ 
    s0, s1, hasL, hasR: BOOL;
    Initial: !s0 && !s1  && !hasL && !hasR && fork6 && fork0;
    Normative: !(s0 && s1); 

   !s0 && !s1 -> s0=false, s1=true; 
   !s0 && !s1 -> s0=false, s1=false; 
   !s0 && s1 && fork6 && !hasL  -> fork6=false, hasL=true; 
   !s0 && s1 && hasL && fork0 -> fork0=false, hasR=true;  
   !s0 && s1 && hasL && hasR -> s0=true, s1=false; 
   s0 && !s1 -> s0=false, s1=false, fork0=true, fork6=true;
   true -> s0=true, s1=true;      
}





Main(){
 phil0:Phil0;
 phil1:Phil1;
 phil2:Phil2;
 phil3:Phil3;
 phil4:Phil4;
 phil5:Phil5;
 phil6:Phil6;

 run phil0();
 run phil1();
 run phil2();
 run phil3();
 run phil4();
 run phil5();
 run phil6();
 

}
