

Process Memory {
        w: BOOL; // the last value written
	r: BOOL; // the value we can read from the memory
        c0: BOOL; // the first bit
        c1: BOOL; // the second bit
        c2: BOOL; // the third bit
	c3: BOOL; // fourth but
	c4: BOOL; // fifth bit
        c5: BOOL; // sixth bit
        c6: BOOL; // seventh bit 
        c7: BOOL; // eighth bit
        c8: BOOL; // ninth bit  
  
    
       	Initial: w && c0 && c1 && c2 && c3 && c4 && c5 && c6 && c7 && c8 && r;
       	Normative: (c0==c1) && (c1==c2) && (c0==c2) && (c0==c3) && (c0==c4) && (c4==c5) && (c5==c6) && (c6==c7) && (c7==c8) && w==r;
	
	[write] true -> w=!w, c0=!c0, c1=!c1, c2=!c2, c3=!c3, c4=!c4,c5=!c5, c6=!c6, c7=!c7, c8=!c8, r=!r;
	[read0] !r -> r = r;
	[read1] r -> r = r;

	
}

Main(){
	m1: Memory;
	run m1();
}

