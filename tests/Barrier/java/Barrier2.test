Enum state = {ready, executing, success, error};
Enum ph = {ph0, ph1};
Global state0 : state;
Global state1 : state;
Global php0 : ph; // phase for process0
Global php1 : ph; // phase for process1
Process P(myState : state, myPhase : ph, otherState0 : state, otherPhase0 : ph){
    Initial: (myState == ready) && (myPhase == ph0);
    Normative: !(myState == error);


//CPB1
    myState==ready && ((otherState0==ready)) || ((otherState0==executing))-> myState=executing;

//CPB2
    myState==executing && (!(otherState0==ready)) || ((otherState0==success))->myState = success;

//CPB3
    myState==success && (!(otherState0==executing)) && otherState0== ready -> myState = ready, myPhase=otherPhase0;
    myState==success && myPhase == ph0 && ((otherState0==success))-> myPhase = ph1;
    myState==success && myPhase == ph1 && ((otherState0==success))-> myPhase = ph0;

//CB4
    myState==error && (!(otherState0==executing))&& (otherState0== ready)   -> myState = ready, myPhase = otherPhase0;
    myState==error && ((otherState0==success))-> myState = ready, myPhase = otherPhase0;
    true -> myState = error;
}
Main(){
    p0:P;
    p1:P;
    run p0(state0, php0, state1, php1);
    run p1(state1, php1, state0, php0);
}
