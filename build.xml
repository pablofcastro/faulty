<project name="dCTL_checker" default="jar" basedir=".">
  <property name="cupProgram"     location="src/parser/parserFaulty/cup" />
  <property name="jflexProgram"   location="src/parser/parserFaulty/jflex"/>
  <property name="cupFormula"     location="src/parser/parserDCTL/cup" />
  <property name="jflexFormula"   location="src/parser/parserDCTL/jflex" />
  <property name="src"     location="src"     />
  <property name="java"    location="java"    />
  <property name="classes" location="classes" />
  <property name="dist"    location="jar"    />
  <property name="lib"     location="lib"     />
  <property name="bin"     location="bin"     />
  <property name="java.auxiliar"     location="java/auxiliar"/>
  <property name="java.formula"     location="java/formula"/> 
  <property name="java.mc"     location="java/mc"/>
  <property name="java.parserProgram"     location="java/parserProgram"/>
  <property name="java.parserFormula"     location="java/parserFormula"/>
  <property name="java.faulty"     location="java/faulty"/>
  <property name="java.faulty.auxiliar"     location="java/faulty/auxiliar"/>
  <property name="jar.file"       location="${dist}/${ant.project.name}.jar"/>
  <property name="jar.main.class" value="mc.MainMC"/>
  <property environment="env" />

  <!-- We rely on CUP-11a  JFlex 1.4.1  -->
  
  <!-- Here compile time tools -->
  <path id="binaries">
    <pathelement location="${bin}" />
    <fileset dir="${bin}">
      <include name="**/*.jar" />
      <include name="**/*.zip" />
    </fileset>
    <pathelement path="${java.class.path}" />
    <pathelement path="${classes}" />
  </path>
  
  <!-- Here, the runtime libraries are stored -->
  <path id="libraries">
    <pathelement location="${lib}" />
    <fileset dir="${lib}">
      <include name="**/*.jar" />
      <include name="**/*.so" />
      <include name="**/*.dylib" />
      <include name="**/*.zip" />
    </fileset>
    <pathelement path="${java.class.path}" />
  </path>

  <!-- We also use JFlex -->
  <taskdef name="jflex" 
           classname="JFlex.anttask.JFlexTask" 
           classpath="${lib}/JFlex.jar" 
  />
   
  <!-- We also use CUP-11a -->
  <taskdef name="cup" 
           classname="java_cup.anttask.CUPTask" 
           classpath="${lib}/java-cup-11a.jar"
  />

  <target name="init">
    <mkdir dir="${classes}"/>
    <mkdir dir="${java}"/>
    <mkdir dir="${dist}"/>
    <mkdir dir="${java.mc}"/>
    <mkdir dir="${java.formula}"/>
    <mkdir dir="${java.auxiliar}"/> 
    <mkdir dir="${java.faulty.auxiliar}"/>
      
    <copy todir="${java.faulty}">
          <fileset dir="src/faulty" includes="**.java"/>
    </copy>
    <copy todir="${java.faulty.auxiliar}">
          <fileset dir="src/faulty/auxiliar" includes="**.java"/>
    </copy>
    <copy todir="${java.mc}">
          <fileset dir="src/mc" includes=".java"/>
    </copy>
      
    <copy todir="${java.mc}">
          <fileset dir="src/mc" includes="**.java"/>
    </copy>
    <copy todir="${java.formula}">
          <fileset dir="src/formula" includes="**.java"/>
    </copy>
    <copy todir="${java.auxiliar}">
          <fileset dir="src/auxiliar" includes="**.java"/>
    </copy>  
      
  </target>


  <target name="cup" depends="init">
    <cup srcfile="${cupProgram}/parserFaulty.cup"
         destdir="${java}" 
         interface="true"
	     parser="parserFaulty"
         symbols="symFaulty"
    />
    <cup srcfile="${cupFormula}/parserDCTL.cup"
      destdir="${java}"
      interface="true"
      parser="parserDCTL"
      symbols="symDCTL"
    />
  </target>

  <target name="jflex" depends="init">
    <jflex file="${jflexProgram}/scannerFaulty.jflex" destdir="${java}" />
    <jflex file="${jflexFormula}/scannerDCTL.jflex" destdir="${java}" />
  </target>
  
  <!-- copy manual edited sources to automatically generated ones -->
  <target name="copy_src" depends="jflex,cup">
        <copy todir="${java}">
            <fileset dir="${src}" includes="**.java" />
        </copy>
  </target>
    
 <target name="compile" depends="copy_src">
    <javac includeantruntime="false" srcdir="${java}" destdir="${classes}">
      <classpath refid="libraries" />
    </javac>
  </target>
 
 <target name="cleaning" depends="compile">
       <delete dir="${java}" />
  </target>    
    
  <target name="jar" depends="cleaning" description="Build jar file">
      <manifestclasspath property="jar.classpath" jarfile="${jar.file}">
          <classpath>
              <fileset dir="${dist}" includes="*.jar"/>
          </classpath>
      </manifestclasspath>
      
    <jar jarfile="${jar.file}" basedir="${classes}">
     <manifest>
         <attribute name="Main-Class" value="${jar.main.class}" />
         <!-- JavaBDD and CUP runtime is needed for parsing! -->
         <attribute name="Class-Path" value="${jar.classpath}" />
     </manifest>
        <zipgroupfileset dir="${lib}" includes="**/**.jar" />
        <fileset dir="${lib}" includes="**/**.dylib"/>
        <fileset dir="${lib}" includes="**/**.so"/>
    </jar>
    
    <!-- Thrid party libraries can only be found by java -jar if they reside in the same dir
    <copy todir="${dist}">
	<fileset dir="${lib}" includes="**/**.jar"/>
        
    </copy>-->
  </target>
    
    
    
  <!-- Test the parser in a single run -->
  <target name="runCircuit4" depends="jar">
    <java jar="${jar.file}" fork="true">
     <arg value="tests/circuit_4inputs/c-element_4inputs.test" />
      <arg value="tests/circuit_4inputs/property2.test" />
    </java>
  </target>

    <!-- Test the parser in a single run -->
    <target name="runCircuit2" depends="jar">
        <java jar="${jar.file}" fork="true">
            <arg value="tests/circuit2-inputs/c-element_2inputs.test" />
            <arg value="tests/circuit2-inputs/property1.test" />
        </java>
    </target>
    
 
    
  <target name="clean">
    <delete dir="${classes}" />
    <delete dir="${dist}" />
  </target>
</project>
